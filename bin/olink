#!/usr/bin/perl

# ---   *   ---   *   ---
# deps

  use v5.36.0;
  use strict;
  use warnings;

  use Cwd qw(abs_path);
  use English qw(-no_match_vars);
  use lib $ENV{'ARPATH'}.'/lib/sys/';

  use Style;
  use Cli;

  use Shb7;

  use Shb7::Bk::gcc;
  use Shb7::Build;

# ---   *   ---   *   ---

my $m=Cli->nit(

  @{$Cli::Fstruct::ATTRS},

  {id=>'lib',short=>'-l',argc=>1},
  {id=>'inc',short=>'-I',argc=>1},
  {id=>'out',short=>'-o',argc=>1},

  {id=>'debug',short=>'-g',argc=>0},
  {id=>'-pg',short=>'-pg',argc=>0},

);

my @files=Cli::Fstruct::proto_search($m);

# ---   *   ---   *   ---

for my $v($m->{inc},$m->{lib}) {
  $v=$NULLSTR if $v eq $NULL

};

$m->{inc}=[

  q[-I./],

  map {$ARG=q[-I].$ARG}
  (split $COMMA_RE,$m->{inc})

];

$m->{lib}=[
  map {$ARG=q[-l].$ARG}
  (split $COMMA_RE,$m->{lib})

];

# ---   *   ---   *   ---

my $bld=Shb7::Build->nit(

  name  => $m->{out},

  libs  => $m->{lib},
  incl  => $m->{inc},

  debug => $m->{debug} ne $NULL,

);

my $bk  = Shb7::Bk::gcc->nit();
my $blt = 0;

for my $f(@files) {
  $f=$bk->push_src(abs_path($f));
  $blt+=$f->update($bld);

};

$bld->push_files(@files);
$bld->olink();

# ---   *   ---   *   ---
1; # ret
