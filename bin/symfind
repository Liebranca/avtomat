#!/usr/bin/perl
# ---   *   ---   *   ---
# SYMFIND
# Looks for names in files
#
# LIBRE SOFTWARE
# Licensed under GNU GPL3
# be a bro and inherit
#
# CONTRIBUTORS
# lyeb,
# ---   *   ---   *   ---

# deps

  use v5.36.0;
  use strict;
  use warnings;

  use English qw(-no_match_vars);

  use lib $ENV{'ARPATH'}.'/lib/sys/';

  use Style;
  use Arstd::Path;
  use Arstd::IO;

  use Cli;

  use lib $ENV{'ARPATH'}.'/lib/';

  use Lang;

  use Lang::Perl;
  use Peso::Rd;

# ---   *   ---   *   ---
# info

  our $VERSION=v0.1.1;
  our $AUTHOR='IBN-3DILA';

# ---   *   ---   *   ---
# initialize fstruct search

my $m=Cli->nit(

  @{$Cli::Fstruct::ATTRS},

);

my @files=Cli::Fstruct::proto_search($m);
my $sym_re=$m->{symbol};
my $ext_re=qr{\.pmc?}x;

# ---   *   ---   *   ---
# walk the fstruct

while(@files) {

  my $f=shift @files;

  if(-d $f) {

    expand_path($f,\@files);
    next;

  };if(!($f=~ $ext_re)) {next};

# ---   *   ---   *   ---

  my $body=orc($f);
  my $i=0;

  $body=join "\n",

    map {$i++.':__COOKED__:'.$ARG}
    split m/\n/,$body;

  my @data=();

# ---   *   ---   *   ---

  while($body=~
    s/^(\d+:__COOKED__:(.*?)$sym_re)//m

  ) {

    my ($lineno,$code)=
      split m/:__COOKED__:/,${^CAPTURE[0]};

    $code=~ s/^\s*//;

    push @data,sprintf
      "\e[33;22m%4i\e[0m %-54s\n",
      $lineno,$code

    ;
  };

# ---   *   ---   *   ---

  if(@data) {
    printf {*STDOUT}
      "\e[34;22m%s\e[0m".
      "\e[37;1m:\e[0m\n%s\n",

      $f,join $NULLSTR,@data

  };

};


# ---   *   ---   *   ---
1; # ret
