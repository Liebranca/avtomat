#!/usr/bin/perl
# ---   *   ---   *   ---
# TODO
# Displays *.mny files as
# trees. Stand-in for cash/board
#
# LIBRE SOFTWARE
# Licensed under GNU GPL3
# be a bro and inherit
#
# CONTRIBUTORS
# lyeb,
# ---   *   ---   *   ---

# deps
  use v5.36.0;
  use strict;
  use warnings;

  use English qw(-no_match_vars);
  use Cwd qw(getcwd);

  use lib $ENV{'ARPATH'}.'/avtomat/';
  use lib $ENV{'ARPATH'}.'/avtomat/sys/';
  use lib $ENV{'ARPATH'}.'/avtomat/hacks/';

  use Style;
  use Arstd;

  use Tree;
  use Cli;

# ---   *   ---   *   ---

  my $m=Cli->nit(

    {id=>'focus_only',short=>-fo},

  );

  $m->take(@ARGV);

# ---   *   ---   *   ---

my $file=getcwd().'/todo.mny';
if(!(-f $file)) {

  Arstd::errout(
    q{No *.mny files in '%s'},

    args=>[getcwd()],
    lvl=>$AR_ERROR,

  );

  goto TAIL;

};

# ---   *   ---   *   ---

my $body=Arstd::orc($file);
my @lines=split $NEWLINE_RE,$body;

Arstd::arrfil(\@lines);

# ---   *   ---   *   ---

my $frame=Tree->new_frame();

my $root=$frame->nit(undef,shift @lines);
my $anchor=$root;

for my $line(@lines) {

  my $done=0;
  if($line=~ s[(~|x)\s+][]) {
    $done=$1 eq 'x';

  };

# ---   *   ---   *   ---

  if($anchor && $anchor ne $root && $line=~ s[(\^+)\s+][]) {

    my $arrows=$1;
    my $lvl=length $arrows;

    $anchor=$root;

    while($lvl) {
      $anchor=$anchor->{leaves}->[-1];
      $lvl--;

    };

# ---   *   ---   *   ---

  } else {

    $anchor=$root;

  };

# ---   *   ---   *   ---

  my $focus=0;
  if($line=~ s[\*$][]) {
    $line="\e[40;5m$line\e[0m";
    $focus=1;

  };

# ---   *   ---   *   ---

  if($done) {

    $line=

      "\e[37;1m[\e[0m".
      "\e[32;1mx\e[0m".
      "\e[37;1m]\e[0m".q{ }.

      $line;

  } else {

    $line=

      "\e[37;1m[\e[0m".
      "\e[31;22m~\e[0m".
      "\e[37;1m]\e[0m".q{ }.

      $line;

  };

# ---   *   ---   *   ---

  if(

     !$m->{focus_only} || $focus
  || (defined $anchor && $anchor->{focus})

  ) {

    my $nd=$frame->nit($anchor,$line);

    $nd->{focus}=$focus;
    $nd->{done}=$done;

    $anchor=1;

  } else {

    $anchor=undef;

  };

# ---   *   ---   *   ---

};

$root->prich();

TAIL:
  exit;

# ---   *   ---   *   ---
1; # ret
