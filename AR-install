#!/usr/bin/perl

# AR-INSTALL
# this script sets up a new AR directory

# ---   *   ---   *   ---

BEGIN {

  my $clean=shift @ARGV;

  my $ex=$ENV{'ARPATH'}.'/avtomat/AR.pl';
  if($clean eq 'clean') {
    $ex.=q{ }.'clean';

  };

  my $me=`$ex`;

  print $me;
  if($me=~ m/^ARPATH missing/) {
    exit;

  };

};

# ---   *   ---   *   ---
# deps

  use strict;
  use warnings;

  use lib $ENV{'ARPATH'}.'/lib/sys/';
  use Shb7;

  use lib $ENV{'ARPATH'}.'/lib/';
  use Avt;

# ---   *   ---   *   ---

my $root=Shb7::set_root($ENV{'ARPATH'});

# ---   *   ---   *   ---
# fetch missing deps

#{ my @deps=(
#
#    ['help',$Avt::LYEB.'/help',undef],
#    ['ft8',$Avt::LYEB.'/ft8',undef],
#    ['ce',$Avt::LYEB.'/ce',undef],
#
#  );Avt::depchk $root,\@deps;
#
#};

# ---   *   ---   *   ---
# PACKAGE CONFIGS

# ---   *   ---   *   ---

Avt::set_config(

  name=>'avtomat',
  pre_build=>q(

    my $ex=$ENV{'ARPATH'}.'/avtomat/AR.pl';
    my $me=`$ex`;

    print $me;
    if($me=~ m/^ARPATH missing/) {
      exit;

    };

  ),

);

# ---   *   ---   *   ---

Avt::set_config(

  name=>'ce',
  scan=>'-x keys',

  build=>'x:ce',

  xcpy=>[qw(wpid)],
  xprt=>[qw(keyboard.h clock.h arstd.h)],

  gens=>{

    'chartab.h'=>[qw(chartab)],
    'keymap.h'=>[qw(keymap Genks.pm %.k)],

  },

  libs=>[qw(X11)],

# ---   *   ---   *   ---

  post_build=>q(

    use Emit::Std;
    use Emit::Perl;

    Emit::Std::outf(

      'Perl','lib/Lycon.pm',

      author=>'IBN-3DILA',
      include=>[qw(Avt::FFI)],

      body=>\&Emit::Perl::shwlbind,
      args=>['Lycon',['ce']],

    );

  ),

);

# ---   *   ---   *   ---

#Avt::set_config(
#
#  name=>'help',
#  xcpy=>[qw(help* tkmny*)],
#
#);
#
## ---   *   ---   *   ---
#
#Avt::set_config(
#
#  name=>'ft8',
#
#  deps=>[
#
#    [ 'rw-psf',
#      $Avt::GITHUB.'/talamus/rw-psf',
#      undef
#
#    ],
#
#  ],
#
#  xcpy=>[qw(ft8* writepsf*)],
#
## ---   *   ---   *   ---
#
#  post_build=>q(
#
#    if(!(-e $Shb7::Root."/fonts")) {
#
#      Avt::ex 'ft8',[
#        '-g','8,16,24',
#
#        $Shb7::Root."/ft8/lycon",
#        $Shb7::Root."/fonts"
#
#      ],'';
#
#      Avt::ex 'ft8',[
#        '-x','8,16,24','lycon',
#
#        $Shb7::Root."/fonts/",
#        $Shb7::Root."/fonts/X11"
#
#      ],'';
#
#    };
#  ),
#
#);
#
## ---   *   ---   *   ---
#
#Avt::set_config(
#
#  name=>'sin',
#  build=>'ar:sin',
#
#  gens=>{
#    'shblk.h'=>[qw(shblk* %.glsl)],
#
#  },
#
#  libs=>[qw(GL GLEW ce)],
#
#);
#
## ---   *   ---   *   ---
#
#Avt::set_config(
#
#  name=>'chasm',
#
#  build=>'ar:chasm',
#  libs=>[qw(sin SDL2 SDL2main)],
#
#);
#
## ---   *   ---   *   ---
#
#Avt::set_config(
#
#  name=>'AUVILIB',
#
#  build=>'ar:AUVILIB',
#  xprt=>[qw(xforms/im.c)],
#
## ---   *   ---   *   ---
#
#  post_build=>q(
#
#    Avt::stlib($Shb7::Root.'/lib/');
#    Avt::wrcpyboil(
#      '/lib/',
#      'AUVILIB',
#      'IBN-3DILA',
#
#      \&Avt::ctopy,['AUVILIB',['AUVILIB']]
#
#    );
#
#  ),
#
#);

# ---   *   ---   *   ---
# install packages

Avt::scan();
Avt::config();
Avt::make();

my @modules=Avt::MODULES;
for my $mod(@modules) {
  print `$root/$mod/avto`

};

# ---   *   ---   *   ---
1; # ret
