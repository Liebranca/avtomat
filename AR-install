#!/usr/bin/perl

# AR-INSTALL
# this script sets up a new AR directory

# once your ARPATH./bin/ is made, you may
# update it through avtomat itself

# ---   *   ---   *   ---
# sanity check

my $root=$ENV{'ARPATH'};if(!$root) {
  print "ARPATH missing from ENV; aborted\n";
  exit;

};

# ---   *   ---   *   ---
# deps
  use strict;
  use warnings;

  use lib $ENV{'ARPATH'}.'/avtomat/';
  use avt;

# ---   *   ---   *   ---
# fetch missing deps

{
  my @deps=(
    ['help'   ,'https://github.com/Liebranca/help'   ,undef],
    ['ft8'    ,'https://github.com/Liebranca/ft8'    ,undef],
    ['ce'     ,'https://github.com/Liebranca/ce'    ,undef],

  );avt::depchk "$root",\@deps;

};

# ---   *   ---   *   ---
# package configs

my $avtomat_config;{

  my %config=(

  'BUILD' =>  '.'       ,

  'XCPY'  =>  'avtomat*',
  'LCPY'  =>  'avt.pm'  ,
  'XPRT'  =>  '.'       ,

  'GENS'  =>  '.'       ,
  'LIBS'  =>  '.'       ,
  'INCL'  =>  '.'       ,

  'DEFS'  =>  '.'       ,

  );$avtomat_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---

my $help_config;{

  my %config=(

  'BUILD' =>  '.'       ,

  'XCPY'  =>  'help*'   ,
  'LCPY'  =>  'cash.pm' ,
  'XPRT'  =>  '.'       ,

  'GENS'  =>  '.'       ,
  'LIBS'  =>  '.'       ,
  'INCL'  =>  '.'       ,

  'DEFS'  =>  '.'       ,

  );$help_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---

my $ft8_config;{

  my @deps=(
    ['rw-psf','https://github.com/talamus/rw-psf',undef],

  );avt::depchk "$root/ft8",\@deps;

  my %config=(

  'BUILD' =>  '.'       ,

  'XCPY'  =>  'ft8*,writepsf*',
  'LCPY'  =>  'jojft.pm',
  'XPRT'  =>  '.'       ,

  'GENS'  =>  '.'       ,
  'LIBS'  =>  '.'       ,
  'INCL'  =>  '.'       ,

  'DEFS'  =>  '.'       ,

  );$ft8_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---

my $ce_scan="ce -x keys";
my $ce_config;{

  my %config=(

  'BUILD' =>  'x:ce'    ,

  'XCPY'  =>  'wpid'    ,
  'LCPY'  =>  'genks.pm',
  'XPRT'  =>  'keyboard.h',

  'GENS'  =>  'chartab.h:chartab*,'.
              'keymap.h:[keymap*,genks.pm,%.k]',

  'LIBS'  =>  'X11'     ,
  'INCL'  =>  '.'       ,

  'DEFS'  =>  '.'       ,

  );$ce_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---

my $sin_config;{

  my %config=(

  'BUILD' =>  'ar:sin',

  'XCPY'  =>  '.'       ,
  'LCPY'  =>  '.'       ,
  'XPRT'  =>  '.'       ,

  'GENS'  =>  'shblk.h:[shblk*,%.glsl]',

  'LIBS'  =>  'GL,GLEW,ce',
  'INCL'  =>  '.'       ,

  'DEFS'  =>  '.'       ,

  );$sin_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---

my $chasm_config;{

  my %config=(

  'BUILD' =>  'ar:chasm',

  'XCPY'  =>  '.'       ,
  'LCPY'  =>  '.'       ,
  'XPRT'  =>  '.'       ,

  'GENS'  =>  '.'       ,

  'LIBS'  =>  'sin,SDL2,SDL2main',
  'INCL'  =>  '.'       ,

  'DEFS'  =>  '.'       ,

  );$chasm_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---

my $test_config;{

  my %config=(

  'BUILD' =>  'x:test'  ,

  'XCPY'  =>  '.'       ,
  'LCPY'  =>  '.'       ,
  'XPRT'  =>  '.'       ,

  'GENS'  =>  'keymap.h:[keymap*,lib/genks.pm]',

  'LIBS'  =>  'chasm'   ,
  'INCL'  =>  '.'       ,

  'DEFS'  =>  '.'       ,

  );$test_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---
# install packages

my $EX="$root/avtomat/avtomat $root";
`$EX scan avtomat help ft8 $ce_scan sin chasm test`;

`$EX config avtomat $avtomat_config help $help_config ft8 $ft8_config ce $ce_config sin $sin_config chasm $chasm_config test $test_config`;

`$EX make`;

for my $sub('avtomat','help','ft8','ce','sin','chasm','test') {
  print "*>$root/$sub/avto\n";
  print `$root/$sub/avto`;

};

# ---   *   ---   *   ---

# generate default font
if(!(-e "$root/fonts")) {
  avt::ex 'ft8',['-g','8,16,24',"$root/ft8/lycon",
    "$root/fonts"],'';

  avt::ex 'ft8',['-x','8,16,24','lycon',
    "$root/fonts/","$root/fonts/X11"],'';

};

# ---   *   ---   *   ---

avt::wrcplboil_pm(
  '/lib/',
  'platy',
  'IBN-3DILA',

  \&avt::ctopl,['platy',['ce']]

);

# ---   *   ---   *   ---
1; # ret
