#!/usr/bin/perl

# AR-INSTALL
# this script sets up a new AR directory

# ---   *   ---   *   ---

BEGIN {

  use Cwd qw(abs_path);

  my @ar=split '/',abs_path(__FILE__);
  my $d=join '/',@ar[0..$#ar-1];

  push @INC,$d;
  require 'AR.ph';

  my $dst=$ENV{'ARPATH'}.'/include/AR.ph';
  my $src=$d.'/AR.ph';

  my $do_copy=!(-e $dst);

  $do_copy=(!$do_copy)
    ? !((-M $dst)<(-M $src))
    : $do_copy;

  `cp $src $dst`;

  # regenerate defs
  `$ENV{'ARPATH'}./avtomat/sygen`;

};

# ---   *   ---   *   ---
# deps

  use strict;
  use warnings;

  use lib $ENV{'ARPATH'}.'/lib/';
  use avt;

# ---   *   ---   *   ---

my $root=avt::root($ENV{'ARPATH'});
unshift @ARGV,$root.'/lib/';avt::stlib();

# ---   *   ---   *   ---
# fetch missing deps

{ my @deps=(

    ['help',avt->LYEB.'/help',undef],
    ['ft8',avt->LYEB.'/ft8',undef],
    ['ce',avt->LYEB.'/ce',undef],

  );avt::depchk $root,\@deps;

};

# ---   *   ---   *   ---
# PACKAGE CONFIGS

# ---   *   ---   *   ---
# avtomat

{ my %config=(

  'NAME'  =>  'avtomat',

  );$config{'PREB'}=q(
    my $ex=avt::dirof(__FILE__).'/AR.ph';`$ex`;

  );avt::strconfig \%config;

};

# ---   *   ---   *   ---
# help

{ my %config=(

  'NAME'  =>  'help',

  'XCPY'  =>  'help*',
  'LCPY'  =>  'cash.pm,board.pm,sector.pm,vec4.pm',

  );avt::strconfig \%config;

};

# ---   *   ---   *   ---
# ft8

{ my @deps=(

    ['rw-psf',
      avt->GITHUB.'/talamus/rw-psf',
      undef

    ],

  );avt::depchk "$root/ft8",\@deps;

  my %config=(

  'NAME'  =>  'ft8',

  'XCPY'  =>  'ft8*,writepsf*',
  'LCPY'  =>  'jojft.pm',

# ---   *   ---   *   ---
# post-build calls for ft8

  );$config{'POST'}=q(

    if(!(-e avt::root."/fonts")) {

      avt::ex 'ft8',[
        '-g','8,16,24',

        avt::root."/ft8/lycon",
        avt::root."/fonts"

      ],'';

      avt::ex 'ft8',[
        '-x','8,16,24','lycon',

        avt::root."/fonts/",
        avt::root."/fonts/X11"

      ],'';

    };);avt::strconfig \%config;

};

# ---   *   ---   *   ---
# ce

{ my %config=(

  'NAME'  =>  'ce',
  'SCAN'  =>  '-x keys',

  'BUILD' =>  'x:ce',

  'XCPY'  =>  'wpid',
  'LCPY'  =>  'genks.pm',
  'XPRT'  =>  'keyboard.h,clock.h,arstd.h',

  'GENS'  =>  'chartab.h:chartab*,'.
              'keymap.h:[keymap*,genks.pm,%.k]',

  'LIBS'  =>  'X11',

# ---   *   ---   *   ---
# post-build calls for ce

  );$config{'POST'}=q(

    unshift @ARGV,avt::root.'/lib/';
    avt::stlib();

    avt::wrcplboil_pm(
      '/lib/',
      'lycon',
      'IBN-3DILA',

      \&avt::ctopl,['lycon',['ce']]

    );avt::plext(

      '/lib/lycon.pm',
      '/ce/lycon_ext'

    );

  );avt::strconfig \%config;

};

# ---   *   ---   *   ---
# sin

{ my %config=(

  'NAME'  =>  'sin',
  'BUILD' =>  'ar:sin',

  'GENS'  =>  'shblk.h:[shblk*,%.glsl]',
  'LIBS'  =>  'GL,GLEW,ce',

  );avt::strconfig \%config;

};

# ---   *   ---   *   ---
# chasm

{ my %config=(

  'NAME'  =>  'chasm',

  'BUILD' =>  'ar:chasm',
  'LIBS'  =>  'sin,SDL2,SDL2main',

  );avt::strconfig \%config;

};

# ---   *   ---   *   ---
# test

{ my %config=(

  'NAME'  =>  'test',
  'BUILD' =>  'x:test',

  'GENS'  =>  'keymap.h:[keymap*,lib/genks.pm]',
  'LIBS'  =>  'chasm',

  );avt::strconfig \%config;

};

# ---   *   ---   *   ---
# install packages

avt::scan();
avt::config();
avt::make();

for my $sub(avt::MODULES) {
  print `$root/$sub/avto`;

};

# ---   *   ---   *   ---
1; # ret
