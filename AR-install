#!/usr/bin/perl

# AR-INSTALL
# this script sets up a new AR directory

# once your ARPATH./bin/ is made, you may
# update it through avtomat itself
# ---   *   ---   *   ---

BEGIN {

  use Cwd qw(abs_path);

  my @ar=split '/',abs_path(__FILE__);
  my $d=join '/',@ar[0..$#ar-1];

  push @INC,$d;
  require 'AR.ph';

  my $dst=$ENV{'ARPATH'}.'/include/AR.ph';
  my $src=$d.'/AR.ph';

  my $do_copy=!(-e $dst);

  $do_copy=(!$do_copy)
    ? !((-M $dst)<(-M $src))
    : $do_copy;

  `cp $src $dst`;

  # regenerate defs
  `$ENV{'ARPATH'}./avtomat/sygen`;

};

# ---   *   ---   *   ---
# deps

  use strict;
  use warnings;

  use lib $ENV{'ARPATH'}.'/lib/';
  use avt;

my $root=avt::root($ENV{'ARPATH'});
unshift @ARGV,$root.'/lib/';avt::stlib();

# ---   *   ---   *   ---
# fetch missing deps

{
  my @deps=(
    ['help'   ,'https://github.com/Liebranca/help'   ,undef],
    ['ft8'    ,'https://github.com/Liebranca/ft8'    ,undef],
    ['ce'     ,'https://github.com/Liebranca/ce'    ,undef],

  );avt::depchk "$root",\@deps;

};

# ---   *   ---   *   ---
# package configs

my $avtomat_config;{

  my %config=(
  'XCPY'  =>  'avtomat*',
  'LCPY'  =>  '',

  );$avtomat_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---

my $help_config;{

  my %config=(

  'XCPY'  =>  'help*',
  'LCPY'  =>  'cash.pm,board.pm,sector.pm,vec4.pm',

  );$help_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---

my $ft8_config;{

  my @deps=(
    ['rw-psf','https://github.com/talamus/rw-psf',undef],

  );avt::depchk "$root/ft8",\@deps;

  my %config=(

  'XCPY'  =>  'ft8*,writepsf*',
  'LCPY'  =>  'jojft.pm',

  );$ft8_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---

my $ce_scan="ce -x keys";
my $ce_config;{

  my %config=(

  'BUILD' =>  'x:ce',

  'XCPY'  =>  'wpid',
  'LCPY'  =>  'genks.pm',
  'XPRT'  =>  'keyboard.h,clock.h,arstd.h',

  'GENS'  =>  'chartab.h:chartab*,'.
              'keymap.h:[keymap*,genks.pm,%.k]',

  'LIBS'  =>  'X11',

  );$ce_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---

my $sin_config;{

  my %config=(

  'BUILD' =>  'ar:sin',

  'GENS'  =>  'shblk.h:[shblk*,%.glsl]',

  'LIBS'  =>  'GL,GLEW,ce',

  );$sin_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---

my $chasm_config;{

  my %config=(

  'BUILD' =>  'ar:chasm',
  'LIBS'  =>  'sin,SDL2,SDL2main',

  );$chasm_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---

my $test_config;{

  my %config=(

  'BUILD' =>  'x:test',

  'GENS'  =>  'keymap.h:[keymap*,lib/genks.pm]',
  'LIBS'  =>  'chasm',

  );$test_config=avt::strconfig \%config;

};

# ---   *   ---   *   ---
# install packages

my $EX="$root/avtomat/avtomat $root";
`$EX scan avtomat help ft8 $ce_scan sin chasm test`;
`$EX config avtomat $avtomat_config help $help_config ft8 $ft8_config ce $ce_config sin $sin_config chasm $chasm_config test $test_config`;

`$EX make`;

for my $sub('avtomat','help','ft8','ce','sin','chasm','test') {
  print `$root/$sub/avto`;

};

# ---   *   ---   *   ---

# generate default font
if(!(-e "$root/fonts")) {
  avt::ex 'ft8',['-g','8,16,24',"$root/ft8/lycon",
    "$root/fonts"],'';

  avt::ex 'ft8',['-x','8,16,24','lycon',
    "$root/fonts/","$root/fonts/X11"],'';

};

# ---   *   ---   *   ---

avt::wrcplboil_pm(
  '/lib/',
  'lycon',
  'IBN-3DILA',

  \&avt::ctopl,['lycon',['ce']]

);avt::plext(

  '/lib/lycon.pm',
  '/ce/lycon_ext'

);

# ---   *   ---   *   ---
1; # ret
