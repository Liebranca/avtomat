%;

# ---   *   ---   *   ---
# add new below current

case 'branch.new' {

  attr sig;
    any body;

  attr fn;

    push    branch,tmp;

    insert  lv.tmp,0,self.body;
    mergef  lv.tmp,2;

    discard branch;

};

# ---   *   ---   *   ---
# ^transform current to another!

case 'branch.expand' {

  attr sig;
    any body;

  attr fn;

    clear   branch;
    push    branch,tmp;

    insert  lv.tmp,0,self.body;
    flatten lv.tmp,2;
    flatten branch;

};

# ---   *   ---   *   ---
# argless branch expansion

case 'def' {

  attr sig;
    sym name;
    scp body '\{';

  attr fn;


  # register new expansion
  invoke as @,self.name {
    branch.expand self.body;

  };

  # ^remove!
  invoke as undef,self.name {

    banish  @,self.name;
    banish  undef,self.name;

    discard branch;

  };

};

# ---   *   ---   *   ---
