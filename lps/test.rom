%;

# ---   *   ---   *   ---
# make new directive

case 'def' {

  attr sig;
    name sym,string;
    body opera '\{';

  attr fn;
    flatten self.body,1;


  invoke as @,self.name {
    replace branch,self.body;

  };

};

# ---   *   ---   *   ---
# ^make instance and invoke it

def this {HLOWRLD};
@this;

# ---   *   ---   *   ---
# sketch. nevermind this!

entry start;
exe   start;

proc wordcmp;


  # get regs
  alc ar,br;

  # ^clear && load true
  xor ar,ar;
  ld  br,$01;


  # set fio
  in  er,fr;
  out ar;

  # ^compare and give result
  xor er,fr;
  ldz ar,br;

#  ret;

# ---   *   ---   *   ---
