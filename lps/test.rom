%;

# ---   *   ---   *   ---
# add new below current

case 'branch.new' {

  attr sig;
    body any;

  attr fn;

    push    branch,tmp;

    insert  lv.tmp,0,self.body;
    mergef  lv.tmp,2;

    discard branch;

};

# ---   *   ---   *   ---
# ^transform current to another!

case 'branch.expand' {

  attr sig;
    body any;

  attr fn;

    clear   branch;
    push    branch,tmp;

    insert  lv.tmp,0,self.body;
    flatten lv.tmp,2;
    flatten branch;

};

# ---   *   ---   *   ---
# argless branch expansion

case 'def' at $00 {

  attr sig;
    name sym,string;
    body opera '\{';

  attr fn;


  # register new expansion
  invoke as @,self.name {
    branch.expand self.body;

  };

  # ^remove!
  invoke as undef,self.name {

    banish  @,self.name;
    banish  undef,self.name;

    discard branch;

  };

};

def stack {sb-2};
@stack;

undef stack;
@stack;

## ---   *   ---   *   ---
## procedure flag-setter
#
#case 'proc' anywhere {
#
#  attr sig;
#    name sym;
#
#  attr fn;
#
#  branch.new {
#    exe code;
#    blk self.name;
#
#  };
#
#};
#
#public proc start;
#  ld ar,[@stack];
#
## ---   *   ---   *   ---
