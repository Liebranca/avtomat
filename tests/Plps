#!/usr/bin/perl

# tests Peso Language Pattern Syntax

# ---   *   ---   *   ---
# deps

  use v5.36.0;
  use strict;
  use warnings;

  use English qw(-no_match_vars);

  use lib $ENV{'ARPATH'}.'/avtomat/sys/';

  use Style;
  use Fmat;

  use Arstd::IO;
  use Tree::Grammar;

# ---   *   ---   *   ---

my $f    = Tree::Grammar->get_frame();
my $top  = $f->nit(

  value  => 'peso',
  parent => undef,
  action => undef,

);

# ---   *   ---   *   ---

my $header=$f->nit(

  value  => 'header',
  parent => $top,

  action => undef,

);

$f->nit(

  value  => qr{\$|\%}x,
  parent => $header,

  action => \&Tree::Grammar::push_to_anchor,

);

$f->nit(

  value    => qr{[^;]+},
  parent   => $header,

  action   => \&Tree::Grammar::push_to_anchor,
  optional => 1,

);

my $term = $f->nit(

  value  => qr{;},
  parent => $header,

  action => \&Tree::Grammar::term,

);

# ---   *   ---   *   ---

my $comment=$f->nit(

  value  => 'comment',
  parent => $top,

  action => undef,

);

$f->nit(

  value  => qr{\x{23}+ [\S\x{20}]* \x{0A}}sx,
  parent => $comment,

  action => undef,

);

# ---   *   ---   *   ---
#
#my $expr=$f->nit(
#
#  value  => 'expr',
#  parent => $top,
#
#  action => undef,
#
#);
#
## ---   *   ---   *   ---
#
#my $fn=$f->nit(
#
#  value  => 'fn',
#  parent => $expr,
#
#  action => undef,
#
#);
#
#$f->nit(
#
#  value  => qr{\w+},
#  parent => $fn,
#
#  action => \&Tree::Grammar::push_to_anchor,
#
#);
#
## ---   *   ---   *   ---
#
#my $value=$f->nit(
#
#  value  => 'value',
#  parent => $expr,
#
#  action => undef,
#
#);
#
#$f->nit(
#
#  value  => qr{\d+},
#  parent => $value,
#
#  action => \&Tree::Grammar::push_to_anchor,
#
#);
#
#$f->nit(
#
#  value    => qr{,},
#  parent   => $value,
#
#  action   => \&Tree::Grammar::rew,
#  optional => 1,
#
#);
#
#$expr->pushlv($term->dup());

# ---   *   ---   *   ---

my $prog   = orc('plps/peso.rom');
$prog      =~ m[([\S\s]+)\s*STOP]x;
$prog      = ${^CAPTURE[0]};

my $result = $top->parse($prog);

say "in: $prog\n";
$result->prich();

# ---   *   ---   *   ---
1; # ret
