#!/usr/bin/perl

# tests Peso Language Pattern Syntax

# ---   *   ---   *   ---
# deps

  use v5.36.0;
  use strict;
  use warnings;

  use English qw(-no_match_vars);

  use lib $ENV{'ARPATH'}.'/avtomat/sys/';
  use lib $ENV{'ARPATH'}.'/avtomat/hacks/';
  use lib $ENV{'ARPATH'}.'/avtomat/';

  use Type;
  use Emit::C;
  use Avt::FFI;

  use Avt;
  use Fmat;

# ---   *   ---   *   ---

#my $tab=$Avt::FFI::Typetab;
#for my $type(keys %$tab) {
#
#  say sprintf "%-28s %-28s",
#    $type,$tab->{$type};
#
#};
#
#say "\n";

# ---   *   ---   *   ---

my $o=Avt::file_sbl(
  $ENV{'ARPATH'}.'/AUVILIB/xforms/im.c'

);

say fatdump($o);

# ---   *   ---   *   ---

#avt::root($ENV{'ARPATH'});
#chdir avt::root;
#
#avt::ctopy(undef,'lycon',['ce']);

#my $tree=lang->c->plps_match(
#
##  'c_func_decl',
##  'int var(static int x,const int* y)'
#
##  'cdecl',
##  'int* var'
#
#);

#my $program=peso::rd::parse(
#  lang->peso,
#  peso::rd::STR,q(
#
#reg attrs;
#  wide x 2*^8-1;
#  wide ptr y;
#
#));

#$program->{tree}->leaves->[0]->defield();
#my $s=$program->{tree}->leaves->[0]->flatten();
#
#my $tree=lang->peso->plps_match(
#
#  'pe_ptr_decl',
#  $s,
#
#);
#
#$tree->prich();

# ---   *   ---   *   ---
1; # ret
