#!/usr/bin/perl
# ---   *   ---   *   ---
# SYMFIND
# Looks for names in files
#
# LIBRE SOFTWARE
# Licensed under GNU GPL3
# be a bro and inherit
#
# CONTRIBUTORS
# lyeb,
# ---   *   ---   *   ---

# deps

  use v5.36.0;
  use strict;
  use warnings;

  use English qw(-no_match_vars);

  use lib $ENV{'ARPATH'}.'/avtomat/';
  use cli;

  use lib $ENV{'ARPATH'}.'/lib/';

  use style;
  use arstd;

  use lang;
  use langdefs::perl;

  use peso::rd;

# ---   *   ---   *   ---
# info

  our $VERSION=v0.1.0;
  our $AUTHOR='IBN-3DILA';

# ---   *   ---   *   ---

my $m=cli::nit(
  ['recursive'],
  ['symbol','-s','--symbol',1],

);

my @files=$m->take(@ARGV);

# ---   *   ---   *   ---

if($m->{recursive}!=NULL) {
  my @ar=@files;
  @files=();

  while(@ar) {
    my $path=shift @ar;
    my @tmp=split m/\s+/,`ls $path`;

    push @files,(map {$path.q{/}.$ARG} @tmp);

  };

};

# ---   *   ---   *   ---

for my $f(@files) {

  my $program=peso::rd::parse(
    lang->perl,
    peso::rd->FILE,

    $f,

    use_plps=>0,

  );

  my $sym=qr{\Q$m->{symbol}};
  my $i=0;

  my @data=();

# ---   *   ---   *   ---

  for my $s(@{$program->{cooked}}) {

    my ($lineno,$code)=split m/:__COOKED__:/,$s;
    if($code=~ $sym) {

      push @data,sprintf
        "\e[33;22m%4i\e[0m %-54s\n",
        $lineno,$code

      ;
    };
  };

# ---   *   ---   *   ---

  if(@data) {
    printf {*STDOUT}
      "\e[34;22m%s\e[0m".
      "\e[37;1m:\e[0m\n%s\n",

      $f,join NULLSTR,@data

  };

};


# ---   *   ---   *   ---
1; # ret
