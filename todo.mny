>avtomat v4.00.0

*>Peso
x Extend Lang::Perl for basic (as-doc) parsing

~ Lang::Plps reimplementation

~ \--> Use Tree::Grammar to parse plps itself
x .  \--> Plps as a package, frames and all
x .  \--> Unique branch for hierarchicals
x .  .  \--> Sorting
x .  .  \--> Namespaces

x .  \--> Unique branches for wed/unwed
x .  \--> Unique branch for re
x .  \--> repl <tags> inside re

~ .  \--> Defining grammar branches
~ .  \--> Find across namespaces

~ \--> Make plps files output Tree::Grammar structs
~ \--> Tweak Tree::Grammar for parsing C, C++, Perl and peso

~ Turn peso into a proper IR
~ \--> Tree manipulation at ipret layer

*>Makescript
x Replace crude gcc wrappers with a class
x \--> Dependency checks
x \--> Building objects
x \--> Linking

*>Shb7
x Break down into packages
x \--> Path managing and ops
x \--> Find ops
x \--> Symbol wrangling
x \--> ld,gcc && mam wrappers

*>Avt::Sieve
x Implement side build sub
x Generate olink calls from side builds
x Run calls before post-build hook

*>Reorder/repurpose Peso into lib/sys
~ Generalize Blk for serialization
~ \--> Writing Blk instances to file
~ \--> Reading from file into Blk
x \--> Messaging through Blks
x .  \--> Message encrypt
x .  \--> Message decrypt

~ Generalize Ptr for Blk fetches
~ \--> Fetch by ID (cross-scope!)

*>Refactor helper
x Find mentions of a given package or subroutine
x \--> Make this recursive
~ \--> Combine f:./bin/symfind with mentions on *.mny trees

~ Find TODO|FIX|BUG etc and append them to these lists
~ Optimize away regexes and needless fncalls

*>Bytestream ipret
~ Embed call-args-data into strings
~ Adapt gd calls to use the Pilot model

*>Bugs
~ Investigate the Peso::Ipret::pesc iter command repetition

*>Backburner
x Move Python stuff from f:./Avt.pm into f:./Emit/Python.pm
~ Handle structs on f:./Emit/Perl.pm -> shwlbind
~ Utils for enforcing AR module standards
~ DEFAULTS enforcer for nits
~ VERSION && AUTHOR enforcer/tracker for modules and executables
x Rework ARGV handler (partial f:help/Cash.pm migration)
~ Standarize module avto-nit
x ^ Registering of modules on first include, for a similar purpose
~ OOP-ification of %Cache-type hashes
x Subdivide the f:./Avt.pm monolith into modules
~ Enable/disable loading of optional deps on install scripts
~ Write Lang::Elisp
~ Elisp version of f:./bin/sygen
x Investigate mysterious DOM and SIGIL errors in f:./sys/Via.pm

*>Avt revision
x Use Shb7::Walk instead of Avt implementation
x Use Tree::File checksums instead of timestamps for update checks
x Rework Frame interface
x Generate syntax highlighting for *.mny files
x Extend *.mny syntax

*>De-bloat Arstd
x Separate array ops from hash ops
x \--> Dump into Arstd::Array && Arstd::Hash, respectively

x Make an Arstd::IO submod
x Make an Arstd::Bytes submod
x Make an Arstd::String submod
x Make an Arstd::Test submod
