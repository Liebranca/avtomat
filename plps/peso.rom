%;
STOP

byte str x;

# ---   *   ---   *   ---
# PESO
# Language definitions
#
# LIBRE SOFTWARE
# Licensed under GNU GPL3
# be a bro and inherit
#
# CONTRIBUTORS
# lyeb,

# ---   *   ---   *   ---
# info

  CLAN      peso;

  VERSION   v0.00.3b;
  AUTHOR    'IBN-3DILA';

  ENTRY     top;

# ---   *   ---   *   ---

ROM std;

  byte  term $3B;
  byte  sep  $2C;

  wed   -qwor,-insens;
  unwed -escape;

  re    spec ptr fptr str buf tab re;
  re    type

    byte wide brad word
    unit half line page

    nihil stark signal

  ;

  re fulltype <spec> \s+ <type>;

  unwed -insens;
  wed   -escape;

  re    sigil

    $ % * - + ^ & ~ /
    \\ @ >> >>: << <<:

    : :: -: +: *: $: %:
    /: &: ^: ~: \\: @:

  ;

  re    ops

    -> *^ * % / ++ + -- -
    ?? ? !! ~ >> > >= | & ^

    << < <=  || && == !=

  ;

  unwed -qwor;

  re    num

    [\d\.:]+
  | $[\dA-Fa-f\.:]+

  | 0[0-7\.:]+
  | 0b[0-1\.:]+

  | v[\d\.:]+[ab]?
  ;

  re    bare [_\w][_\w\d]+;
  re    sigged <sigil><bare>;

  re    ari
    (<sigged|num|bare>)? <op>
    <sigged|num|bare>

  ;

# ---   *   ---   *   ---

PROC expr;

  in byte str s;

  on match <std::any>,s;
    call isany,s;

  or match <std::re>,s;
    call isre,s;

  off;

# ---   *   ---   *   ---

PROC stmt;

  blk end;

    unwed -recapt;

    def   term std::term;
    ...;

    case  "%term%";

# ---   *   ---   *   ---

PROC clist;

  beq stmt;

  blk items;

    self std;
    def  token;
    ...;

    case "%token%";
    case "%sep%" <<??;

# ---   *   ---   *   ---

PROC value_decl;

  beq clist;

  blk beg;

    self std;

    case "%<type>%";
    case "%<spec>%" +?;

  blk items;
    redef token <bare>;

  blk items;
    redef token <ari|num|bare>;

# ---   *   ---   *   ---
